{"ast":null,"code":"var _jsxFileName = \"/home/sagar/Desktop/my-react-app/myapp/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [modex, setxMode] = useState(\"dark\"); // function toggleMode() {\n  //   if (mode === 'light')\n  //     setMode('dark');\n  //   else\n  //     setMode('light');\n  // }\n  // toggleMode();\n  // console.log(mode)\n  // mode={mode} toggleMode={toggleMode}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      title: \"Text String\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(TextForm, {\n            colo: \"black\",\n            btn: \"convert to Upper\",\n            btn2: \"convert to Lower\",\n            title: \"Online Text Converter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Xs2XpJXotYUvSMZimaxUMyrv3WA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NavBar","TextForm","About","BrowserRouter","Router","Routes","Route","App","modex","setxMode"],"sources":["/home/sagar/Desktop/my-react-app/myapp/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport React,{ useState } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar'\nimport TextForm from './components/TextForm';\nimport About from './components/About'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n\n \n\n\nfunction App() {\n  \n  const [modex, setxMode] = useState(\"dark\");\n\n  \n  \n  // function toggleMode() {\n  //   if (mode === 'light')\n  //     setMode('dark');\n  //   else\n  //     setMode('light');\n  // }\n  // toggleMode();\n  // console.log(mode)\n\n  // mode={mode} toggleMode={toggleMode}\n  \n  return (\n\n    \n    <>\n      <NavBar title=\"Text String\"   />\n\n      <Router>\n        <Routes>\n        \n          <Route path=\"/\" element={<TextForm colo=\"black\" btn=\"convert to Upper\" btn2=\"convert to Lower\" title=\"Online Text Converter\" />} />\n          <Route path=\"about\" element={ <About/>} />\n        </Routes>\n      </Router>\n\n\n\n      {/* */}\n    </>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;;;;AAUA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,MAAD,CAAlC,CAFa,CAMb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EAEA,oBAGE;IAAA,wBACE,QAAC,MAAD;MAAQ,KAAK,EAAC;IAAd;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,MAAD;MAAA,uBACE,QAAC,MAAD;QAAA,wBAEE,QAAC,KAAD;UAAO,IAAI,EAAC,GAAZ;UAAgB,OAAO,eAAE,QAAC,QAAD;YAAU,IAAI,EAAC,OAAf;YAAuB,GAAG,EAAC,kBAA3B;YAA8C,IAAI,EAAC,kBAAnD;YAAsE,KAAK,EAAC;UAA5E;YAAA;YAAA;YAAA;UAAA;QAAzB;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,KAAD;UAAO,IAAI,EAAC,OAAZ;UAAoB,OAAO,eAAG,QAAC,KAAD;YAAA;YAAA;YAAA;UAAA;QAA9B;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBAHF;AAoBD;;GArCQQ,G;;KAAAA,G;AAuCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}